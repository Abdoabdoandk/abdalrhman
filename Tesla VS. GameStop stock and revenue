<h2>  **Tesla VS. GameStop stock and revenue** </h2>

This project showing the comparsion in stock data and revenue data between tesla and GME using extacting data by webscrabing or yfinance API and ploting it in the end of project


import pandas as pd
from bs4 import BeautifulSoup
import requests
import yfinance as yf
import plotly.graph_objects as go
from plotly.subplots import make_subplots
def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing=.3)
    stock_data_specific = stock_data[stock_data['Date'] <= '2021-06-14']
    revenue_data_specific = revenue_data[revenue_data['Date'] <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific['Date'], infer_datetime_format=True), y=stock_data_specific['Close'].astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific['Date'], infer_datetime_format=True), y=revenue_data_specific['Revenue'].astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False, height=900, title=stock, xaxis_rangeslider_visible=True)
    fig.show()
#Qustion 1    
tesla_finance = yf.Ticker("TSLA")
tesla_data = tesla_finance.history(period="max")
tesla_data.reset_index(inplace=True)
tesla_data
#Qustion 2
url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
file = requests.get(url).text
soup = BeautifulSoup(file, 'html5lib')
tesla_Revenue = []
for row in soup.find("tbody").find_all("tr"):
    col = row.find_all("td")
    Date = col[0].text
    Revenue = col[1].text
    tesla_dict = {"Date": Date , "Revenue": Revenue}
    tesla_Revenue.append(tesla_dict)
tesla_Revenue= pd.DataFrame(tesla_Revenue)
tesla_Revenue["Revenue"] = tesla_Revenue['Revenue'].str.replace('$',"")
tesla_Revenue["Revenue"] = tesla_Revenue['Revenue'].str.replace(',',"")
tesla_Revenue.dropna(inplace=True)
tesla_Revenue = tesla_Revenue[tesla_Revenue['Revenue'] != ""]
tesla_Revenue.tail()
#Qustion 3
gme_finance = yf.Ticker("GME")
gme_data = gme_finance.history(period="max")
gme_data.reset_index(inplace=True)
gme_data.head()
#Qustion 4
url1 = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html"
file1 = requests.get(url1).text
soup = BeautifulSoup(file1, 'html5lib')
gme_Revenue = []
for row in soup.find("tbody").find_all("tr"):
    col1 = row.find_all("td")
    Date = col1[0].text
    Revenue = col1[1].text
    gme_dict = {"Date": Date , "Revenue": Revenue}
    gme_Revenue.append(gme_dict)
gme_Revenue= pd.DataFrame(gme_Revenue)
gme_Revenue["Revenue"] = gme_Revenue['Revenue'].str.replace('$',"")
gme_Revenue["Revenue"] = gme_Revenue['Revenue'].str.replace(',',"")
gme_Revenue.dropna(inplace=True)
gme_Revenue = gme_Revenue[gme_Revenue['Revenue'] != ""]
tesla_data.head()
tesla_Revenue.tail()
gme_data.head()
gme_Revenue.tail()
make_graph(gme_data,gme_Revenue,'GME')
make_graph(tesla_data,tesla_Revenue,'Tesla')


import pandas as pd
from bs4 import BeautifulSoup
import requests
import yfinance as yf
import plotly.graph_objects as go
from plotly.subplots import make_subplots
def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing=.3)
    stock_data_specific = stock_data[stock_data['Date'] <= '2021-06-14']
    revenue_data_specific = revenue_data[revenue_data['Date'] <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific['Date'], infer_datetime_format=True), y=stock_data_specific['Close'].astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific['Date'], infer_datetime_format=True), y=revenue_data_specific['Revenue'].astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False, height=900, title=stock, xaxis_rangeslider_visible=True)
    fig.show()
#Qustion 1    
tesla_finance = yf.Ticker("TSLA")
tesla_data = tesla_finance.history(period="max")
tesla_data.reset_index(inplace=True)
tesla_data
#Qustion 2
url = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"
file = requests.get(url).text
soup = BeautifulSoup(file, 'html5lib')
tesla_Revenue = []
for row in soup.find("tbody").find_all("tr"):
    col = row.find_all("td")
    Date = col[0].text
    Revenue = col[1].text
    tesla_dict = {"Date": Date , "Revenue": Revenue}
    tesla_Revenue.append(tesla_dict)
tesla_Revenue= pd.DataFrame(tesla_Revenue)
tesla_Revenue["Revenue"] = tesla_Revenue['Revenue'].str.replace('$',"")
tesla_Revenue["Revenue"] = tesla_Revenue['Revenue'].str.replace(',',"")
tesla_Revenue.dropna(inplace=True)
tesla_Revenue = tesla_Revenue[tesla_Revenue['Revenue'] != ""]
tesla_Revenue.tail()
#Qustion 3
gme_finance = yf.Ticker("GME")
gme_data = gme_finance.history(period="max")
gme_data.reset_index(inplace=True)
gme_data.head()
#Qustion 4
url1 = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html"
file1 = requests.get(url1).text
soup = BeautifulSoup(file1, 'html5lib')
gme_Revenue = []
for row in soup.find("tbody").find_all("tr"):
    col1 = row.find_all("td")
    Date = col1[0].text
    Revenue = col1[1].text
    gme_dict = {"Date": Date , "Revenue": Revenue}
    gme_Revenue.append(gme_dict)
gme_Revenue= pd.DataFrame(gme_Revenue)
gme_Revenue["Revenue"] = gme_Revenue['Revenue'].str.replace('$',"")
gme_Revenue["Revenue"] = gme_Revenue['Revenue'].str.replace(',',"")
gme_Revenue.dropna(inplace=True)
gme_Revenue = gme_Revenue[gme_Revenue['Revenue'] != ""]



tesla_data.head()
tesla_Revenue.tail()
gme_data.head()
gme_Revenue.tail()
make_graph(gme_data,gme_Revenue,'GME')
make_graph(tesla_data,tesla_Revenue,'Tesla')

















